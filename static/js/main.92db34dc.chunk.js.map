{"version":3,"sources":["img/bg.png","gameHelpers.js","components/styles/StyledTetris.js","tetrominoes.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOES","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","console","log","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92db34dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          !stage[y + player.pos.y + moveY] ||\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !=='clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\nwidth: 100w;\r\nheight: 100vh;\r\nbackground: url(${bgImage}) #000;\r\nbackground-size: cover;\r\noverflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\ndisplay: flex;\r\nalign-items: flex-start;\r\npadding: 40px;\r\nmargin: 0 auto;\r\nmax-width: 900px;\r\n\r\naside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n}\r\n`;","export const TETROMINOES = {\r\n    0: { shape: [[0]], color: '0, 0, 0' },\r\n    I: {\r\n      shape: [[0, 'I', 0, 0], \r\n             [0, 'I', 0, 0], \r\n             [0, 'I', 0, 0], \r\n             [0, 'I', 0, 0]],\r\n        color: '80, 227, 230',\r\n    },\r\n    J: { shape: [[0, 'J', 0], \r\n                 [0, 'J', 0], \r\n                 ['J', 'J', 0]], \r\n                 color: '36, 95, 223' },\r\n    L: {\r\n      shape: [[0, 'L', 0], \r\n              [0, 'L', 0], \r\n              [0, 'L', 'L']],\r\n      color: '223, 173, 36',\r\n    },\r\n    O: { shape: [['O', 'O'], \r\n                 ['O', 'O']], \r\n                 color: '223, 217, 36' },\r\n    S: { shape: [[0, 'S', 'S'], \r\n                 ['S', 'S', 0], \r\n                 [0, 0, 0]], \r\n                 color: '48, 211, 56' },\r\n    T: {\r\n      shape: [[0, 0, 0], \r\n              ['T', 'T', 'T'], \r\n              [0, 'T', 0]],\r\n      color: '132, 61, 198',\r\n    },\r\n    Z: { shape: [['Z', 'Z', 0], \r\n                 [0, 'Z', 'Z'], \r\n                 [0, 0, 0]], \r\n                 color: '227, 78, 78' },\r\n  };\r\n  \r\n  export const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino =\r\n      tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n    return TETROMINOES[randTetromino];\r\n  };","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, []);\r\n\r\n    const updateStage = prevStage => {\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n      );\r\n\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n      return newStage;\r\n    };\r\n\r\n    setStage(prev => updateStage(prev));\r\n  }, [\r\n    player.collided,\r\n    player.pos.x,\r\n    player.pos.y,\r\n    player.tetromino,\r\n    resetPlayer,\r\n  ]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\ndisplay: grid;\r\ngrid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(25vw / ${props => props.width})\r\n);\r\ngrid-template-columns: repeat(${props=> props.width}, 1fr);\r\ngrid-gap: 1px;\r\nborder: 2px solid #333;\r\nwidth: 100%;\r\nmax-width: 25vw;\r\nbackground: #111;\r\n`","import styled from 'styled-components';\r\n\r\n\r\nexport const StyledCell = styled.div`\r\nwidth: auto;\r\nbackground: rgba(${props => props.color}, 0.7);\r\nborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\nborder-bottom-color: rgba(${props => props.color}, 0.1);\r\nborder-right-color: rgba(${props => props.color}, 1);\r\nborder-top-color: rgba(${props => props.color}, 1);\r\nborder-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOES } from '../tetrominoes';\r\n\r\n\r\nconst Cell = ({ type }) => (\r\n  <StyledCell type={type} color={TETROMINOES[type].color}>\r\n    {console.log('rerender cell')}\r\n  </StyledCell>\r\n);\r\n\r\nexport default React.memo(Cell);","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n  </StyledStage>\r\n);\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 0 0 20px 0;\r\npadding: 20px;\r\nborder: 4px solid #333;\r\nmin-heigth: 30px;\r\nwidth: 100%;\r\nborder-radius: 20px;\r\ncolor: ${props => (props.gameOver ? 'red': '#999')};\r\nbackground: #000;\r\nfont-family: Pixel, Arial, Helvetica, sans-seriff;\r\nfont-size: 0.8rem;\r\n`;","import React from 'react'\r\n\r\nimport { StyledDisplay } from './styles/StyledDisplay'\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n<StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.div`\r\n box-sizing: border-box;\r\n margin: 0 0 20px 0;\r\n padding: 20px;\r\n min-heigth: 30px;\r\n width: 100%;\r\n border-radius: 20px;\r\n border: none;\r\n color: white;\r\n background: #333;\r\n font-family: Pixel, Arial, sans-serif;\r\n font-size: 1rem;\r\n outline: none;\r\n cursor: poiter;\r\n`","import React from 'react'\r\n\r\nimport { StyledStartButton } from './styles/StyledStartButton';\r\n\r\n\r\nconst StartButton = ({ callback }) => (\r\n    <StyledStartButton onClick={callback}>Start Button</StyledStartButton>\r\n)\r\n\r\nexport default StartButton\r\n","import React, { useState } from 'react';\r\n\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// Custom Hooks\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\r\n    rowsCleared\r\n  );\r\n\r\n  console.log('re-render');\r\n\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 40) {\r\n        setDropTime(1000 / (level + 1));\r\n      }\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n  \r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setScore(0);\r\n    setLevel(0);\r\n    setRows(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const drop = () => {\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel(prev => prev + 1);\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n     \r\n      if (player.pos.y < 1) {\r\n        console.log('GAME OVER!!!');\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const dropPlayer = () => {\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyDown={e => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text=\"Game Over\" />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOES, randomTetromino } from '../tetrominoes';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOES[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  function rotate(matrix, dir) {\r\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\r\n    if (dir > 0) return mtrx.map(row => row.reverse());\r\n    return mtrx.reverse();\r\n  }\r\n\r\n  function playerRotate(stage, dir) {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n        return;\r\n      }\r\n    }\r\n    setPlayer(clonedPlayer);\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided,\r\n    }));\r\n  };\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    });\r\n  }, []);\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n}","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n   \r\n    if (rowsCleared > 0) {\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n   useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from 'react';\nimport Tetris from './components/Tetris';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tetris />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}